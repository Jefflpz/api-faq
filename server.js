const express = require("express");
const cors = require("cors");
const { OpenAI } = require("openai");

const app = express();
app.use(cors());
app.use(express.json());

const OPENAI_KEY = process.env.OPENAI_KEY || "";
const client = new OpenAI({ apiKey: OPENAI_KEY });

// Lista de palavras-chave 
const allowedKeywords = [ 
  // Termos gerais e espirituais "b√≠blia", "biblia", "livro sagrado", "jesus", "yeshua", "iesus", "jesus cristo", "cristo jesus", "cristo", "messias", "salvador", "senhor", "deus", "yahweh", "yahv√©", "yahveh", "yahveh", "yhwh", "jeov√°", "jehova", "el shaddai", "adonai", "senhor dos ex√©rcitos", "esp√≠rito santo", "espirito santo", "esp√≠rito de deus", "espirito de deus", "santo esp√≠rito", "santo espirito", "evangelho", "boa nova", "boas novas", "disc√≠pulos", "discipulos", "seguidores de jesus", "ap√≥stolos", "apostolos", "igreja", "ekklesia", "templo", "congrega√ß√£o", "ministerio", "minist√©rio", "pastor", "obreiro", "mission√°rio", "evangelista", "bispo", "presb√≠tero", "ora√ß√£o", "oracao", "clamar", "intercess√£o", "intercessao", "f√©", "fe", "cren√ßa", "crenca", "confian√ßa em deus", "gra√ßa", "graca", "favor imerecido", "salva√ß√£o", "salvacao", "reden√ß√£o", "redencao", "pecado", "transgress√£o", "iniquidade", "arrependimento", "converter-se", "confiss√£o", "confissao", "perd√£o", "perdao", "miseric√≥rdia", "misericordia", "santidade", "pureza", "justi√ßa", "justica", "retid√£o", "retidao", "ressurrei√ß√£o", "ressurreicao", "vida eterna", "vida nova", "cruz", "madeiro", "sacrif√≠cio", "sacrificio", "cordeiro de deus", "alian√ßa", "alianca", "novo pacto", "antigo pacto", "batismo", "batizar", "imers√£o", "ceia do senhor", "santa ceia", "eucaristia", "adora√ß√£o", "adoracao", "louvor", "exalta√ß√£o", "exaltacao", "profecia", "profeta", "profetizar", "or√°culo", "evangelizar", "pregar", "miss√£o", "missao", "prega√ß√£o", "pregacao", "discipulado", "seguimento", "reino de deus", "reino dos c√©us", "arrebatamento", "arrebatamento da igreja", "justifica√ß√£o", "justificacao", "santifica√ß√£o", "santificacao", "mediador", "sumo sacerdote", "advogado fiel", // Teologia e conceitos "trindade", "triunidade", "onipot√™ncia", "onipotencia", "todo-poderoso", "onisci√™ncia", "onisciencia", "todo-sabedor", "onipresen√ßa", "onipresenca", "soteriologia", "escatologia", "angelologia", "demonologia", "doutrina", "dogma", "confiss√£o de f√©", "confissao de fe", "par√°bola", "parabola", "ensinos de jesus", "milagre", "sinal", "maravilha", // Varia√ß√µes de nomes de personagens (exemplos representativos) "abra√£o", "abraao", "abraham", "israel", "jac√≥", "jaco", "yaakov", "mois√©s", "moises", "moshe", "davi", "dav√≠", "david", "salom√£o", "salomao", "shlomo", "jo√£o batista", "joao batista", "yohanan", "pedro", "sim√£o", "simao", "cefas", "paulo", "saulo", "apostolo paulo", "maria", "miryam", "virgem maria", "jesus de nazar√©", "jesus de nazare", "cristo redentor", // Livros da B√≠blia (com varia√ß√µes) "g√™nesis", "genesis", "√™xodo", "exodo", "lev√≠tico", "levitico", "n√∫meros", "numeros", "deuteron√¥mio", "deuteronomio", "salmos", "salmista", "salmo", "prov√©rbios", "proverbios", "c√¢nticos", "canticos", "cantares", "eclesiastes", "pregador", "apocalipse", "revela√ß√£o", "revelacao", // Termos relacionados √†s Escrituras "palavra de deus", "sagrada escritura", "escrituras sagradas", "lei", "tor√°", "pentateuco", "profecia", "or√°culo", "mensagem divina", "mandamentos", "dez mandamentos", // Objetos e s√≠mbolos (com varia√ß√µes) "arca da alian√ßa", "arca da alianca", "arca do senhor", "tabern√°culo", "tabernaculo", "templo", "templo de salom√£o", "templo de salomao", "man√°", "mana", "p√£o do c√©u", "pao do ceu", "sar√ßa ardente", "sar√ßa", "sar√ßa que queimava", "sarsa ardente", "estrela de bel√©m", "estrela de belem", "coroa de espinhos", "coroa", "espinhos", "monte sinai", "monte horebe", "monte si√£o", "monte siao", "monte das oliveiras", "rio jord√£o", "rio jordao", "galileia", "galil√©ia", "jerusal√©m", "jerusalem", "bel√©m", "belem", "nazar√©", "nazare", "cana√£", "canaa", "terra prometida", // Anjos e seres espirituais "miguel", "arcanjo miguel", "gabriel", "anjo gabriel", "rafael", "querubim", "querubins", "serafim", "serafins", "anjos", "anjos do senhor", "ex√©rcito celestial", "exercito celestial", // Express√µes crist√£s curtas e populares "jesus salva", "jesus vive", "cristo reina", "cristo reina para sempre", "deus √© amor", "deus e amor", "cristo √© a rocha", "cristo e a rocha", "gl√≥ria a deus", "gloria a deus", "aleluia", "hallelujah", "maranata", "santo santo santo", "paz do senhor", "a paz do senhor", "em nome de jesus", "em nome de cristo", "am√©m", "amen", "jesus voltar√°", "jesus voltara", "cristo ressuscitou", "palavra viva", "caminho verdade e vida", "o senhor √© meu pastor", "o senhor e meu pastor", "tudo posso em cristo", "deus prover√°", "deus prover√° o cordeiro", "ora sem cessar", "orai sem cessar" 
];

app.post("/chat", async (req, res) => {
  try {
    const { message } = req.body;
    if (!message) return res.status(400).json({ answer: "Mensagem obrigat√≥ria" });

    const isBiblical = allowedKeywords.some(keyword => message.toLowerCase().includes(keyword));

    if (!isBiblical) {
      return res.json({ answer: "N√£o consigo responder perguntas n√£o b√≠blicas! ‚ù§Ô∏è" });
    }

    // Chamando a OpenAI pelo SDK
    const response = await client.chat.completions.create({
      model: "gpt-4.1-mini",
      messages: [
        {
          role: "system",
          content:
            "Responda de forma objetiva, clara e bem estruturada. Utilize apenas HTML para formatar o texto, permitindo apenas as tags: <h2>, <h3>, <p>, <ul>, <li>, <b> e <i>. " +
            "Organize a resposta em par√°grafos bem definidos, use listas quando apropriado e destaque termos importantes com negrito ou it√°lico. " +
            "Quando necess√°rio, inclua emojis para ilustrar ou enfatizar ideias, exemplos de vers√≠culos b√≠blicos üìñ e refer√™ncias a te√≥logos renomados."
        },
        { role: "user", content: message }
      ],
      max_tokens: 500
    });

    let outputText = response.choices[0].message.content || "";

    // Limpeza e padroniza√ß√£o
    outputText = outputText
      .replace(/\n{2,}/g, "</p><p>") // quebras duplas viram novos par√°grafos
      .replace(/\n/g, " ") // remove quebras soltas
      .trim();

    if (!/^<\w+>/.test(outputText)) {
      outputText = `<p>${outputText}</p>`;
    }

    // Adiciona container estilizado
    const finalOutput = `
      <div style="font-family: Arial, sans-serif; color: #f1f1f1; line-height: 1.6;">
        ${outputText}
      </div>
    `;

    res.json({ answer: finalOutput });
  } catch (e) {
    console.error("Erro no backend:", e);
    res.status(500).json({ answer: "<p>Erro no servidor do backend.</p>" });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, "0.0.0.0", () => {
  console.log(`‚úÖ Backend rodando na porta ${PORT}`);
});
